name: Publish Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "App version"
        required: true
        type: string
      prerelease:
        description: "Is pre-release"
        type: boolean
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-release
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_REPO: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive

      # - name: Build Libgit2
      #   run: |
      #     cd app/libgit2-android
      #     ANDROID_API=34 ANDROID_ABI=arm64-v8a BUILD_ALL=1 INSTALL_NDK=1 ./build.sh
      #     ANDROID_API=34 ANDROID_ABI=x86_64 BUILD_ALL=1 CLEAN=1 ./build.sh

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: gradle

      # https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Retrieve the secret and decode it to a file and Build apk
        env:
          KEY_BASE64: ${{ secrets.KEY_BASE64 }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo $KEY_BASE64 | base64 --decode > app/key.jks
          ./gradlew assembleRelease

          mkdir -p packages
          # warning: do not use github.event syntax here
          # https://stackoverflow.com/questions/71458189/github-action-workflow-call-does-not-use-up-to-date-input-values
          mv app/build/outputs/apk/release/app-release.apk packages/gitnote-release-${{ inputs.version }}.apk

      - name: Set prerelease flag
        if: ${{ github.event.inputs.prerelease == 'true' }}
        run: |
          echo "PRERELEASE=--prerelease" >> $GITHUB_ENV

      - name: Publish release
        run: |
          # delete tag/release if needed
          gh release delete ${{ inputs.version }} --yes || true
          git push --delete origin ${{ inputs.version }} || true

          git tag ${{ inputs.version }}
          git push origin --tags

          # https://cli.github.com/manual/gh_release_create
          gh release create ${{ inputs.version }} --title "${{ inputs.version }}" \
            --verify-tag ${{ env.PRERELEASE }} --generate-notes --target $GITHUB_SHA \
            ./packages/*
